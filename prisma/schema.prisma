generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model permissions {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role_id        String?  @db.Uuid
  permission_key String   @db.VarChar(50)
  description    String?
  roles          roles?   @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role_name   String       @unique @db.VarChar(20)
  created_at  DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?    @default(now()) @db.Timestamptz(6)
  permissions permissions[]
  users       users[]
}

model users {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String    @db.VarChar(40)
  email          String    @unique @db.VarChar(40)
  hashed_password String   @db.VarChar(100)
  phone          String?   @db.VarChar(30)
  role_id        String?   @db.Uuid
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)
  is_active      status   @default(active)
  roles          roles?    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}



enum status {
  active
  suspended
  deleted
}
